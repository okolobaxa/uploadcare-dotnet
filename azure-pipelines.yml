trigger:
- master

stages:

- stage: 'Build'
  variables:
    buildConfiguration: 'Release'

  jobs:
  - job:
    pool:
      vmImage: 'ubuntu-latest'

    workspace:
      clean: all
      
    steps:
      - task: DotNetCoreCLI@2
        displayName: "NuGet Restore"
        inputs:
          command: restore
          projects: '**/*.csproj'

      - task: DotNetCoreCLI@2
        displayName: "Build Solution"
        inputs:
          command: build
          projects: '**/*.csproj'
          arguments: '--configuration $(buildConfiguration)'
    
      - task: DotNetCoreCLI@2
        displayName: "Run Tests"
        inputs:
          command: 'test'
          projects: 'Uploadcare.Tests/Uploadcare.Tests.csproj'

      - task: DotNetCoreCLI@2
        displayName: 'Create NuGet Package'
        inputs:
          command: pack
          packDirectory: '$(Build.ArtifactStagingDirectory)/package'
          arguments: '--configuration $(buildConfiguration)'
          nobuild: true

      - publish: '$(Build.ArtifactStagingDirectory)/package'
        artifact: 'package'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'XUnit'
          testResultsFiles: '**/*.trx'
          searchFolder: '$(Agent.TempDirectory)'

- stage: 'PublishReleaseNuGetPackage'
  displayName: 'Publish NuGet Package'
  dependsOn: 'Build'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  
  jobs:
  - deployment:
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'nugetorg'
    strategy:
     runOnce:
       deploy:
         steps:
          
          - task: NuGetToolInstaller@1
            inputs:
              versionSpec: '5.1'

          - task: NuGetCommand@2
            inputs:
              command: 'custom'
              arguments: 'push $(Pipeline.Workspace)/package/*.nupkg -NonInteractive -Source https://api.nuget.org/v3/index.json -ApiKey $(nuget-uploadcare) -SkipDuplicate -NoSymbols'
                